name: Container Workflow
on:
  workflow_dispatch:

env:
  ACR_LOGON_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/webapp:${{ github.sha }}

jobs:

  call-trufflehog-scan:
    uses: ./.github/workflows/scanning.yml

  call-semgrep-scan:
    needs: call-trufflehog-scan
    uses: ./.github/workflows/semgrep.yml
    secrets:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  build-deploy-image:
      needs: call-semgrep-scan
      runs-on: ubuntu-latest
      
      steps:
      # checkout the repo
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@master
        
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGON_SERVER }}
          username: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}

      - run: docker build . -t ${{ env.IMAGE_NAME }}
      - run: docker push ${{ env.IMAGE_NAME }}

  call-unit-tests:
      needs: build-deploy-image
      uses: ./.github/workflows/unit-testworkflow.yml
  
  deploy-to-aks:
  
    needs: call-unit-tests
    
    runs-on: ubuntu-latest
    
    # if: github.ref == 'refs/heads/master'
    
    environment: PROD
    #env:
      #NAMESPACE: dummy
    
    steps:
    
    - uses: actions/checkout@main
    
    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ secrets.AKS_NAME }}
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
  
    # Create namespace if doesn't exist
    # - run: |
    #    kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
  
    # Create image pull secret for ACR
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.ACR_LOGON_SERVER }}
        container-registry-username: ${{ secrets.SERVICE_PRINCIPAL_ID }}
        container-registry-password: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
        secret-name: ${{ secrets.AKS_SECRET }}
        # namespace: ${{ env.NAMESPACE }}
  
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.IMAGE_NAME }}
        imagepullsecrets: |
          ${{ secrets.AKS_SECRET }}
        #namespace: ${{ env.NAMESPACE }}
        
  trigger-release-upload:
    needs: build-deploy-image
    uses: ./.github/workflows/upload-release.yml
    secrets:
      GH_PAT: ${{ secrets.GH_PAT }}
